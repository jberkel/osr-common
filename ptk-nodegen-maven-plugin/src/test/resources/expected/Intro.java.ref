/* 
 * This file is auto-generated.
 * DO NOT MODIFY MANUALLY!
 * 
 * Generated by AstNodeGenerator.
 */



import de.fau.cs.osr.ptk.common.ast.*;




/**
 * <h1>Intro</h1>
 */
public class Intro
        extends LeafNode
        
{
	private static final long serialVersionUID = 1L;

	// =========================================================================

	public Intro()
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);

	}
	public Intro(String abstract_, String continue_, String for_, String new_, String switch_, String assert_, String default_)
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);
		setAbstract(abstract_);
		setContinue(continue_);
		setFor(for_);
		setNew(new_);
		setSwitch(switch_);
		setAssert(assert_);
		setDefault(default_);

	}
	public Intro(String goto_, String package_, String synchronized_, String boolean_, String do_, String if_, String private_)
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);
		setGoto(goto_);
		setPackage(package_);
		setSynchronized(synchronized_);
		setBoolean(boolean_);
		setDo(do_);
		setIf(if_);
		setPrivate(private_);

	}
	public Intro(String this_, String break_, String double_, String implements_, String protected_, String throw_, String byte_)
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);
		setThis(this_);
		setBreak(break_);
		setDouble(double_);
		setImplements(implements_);
		setProtected(protected_);
		setThrow(throw_);
		setByte(byte_);

	}
	public Intro(String else_, String import_, String public_, String throws_, String case_, String enum_, String instanceof_)
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);
		setElse(else_);
		setImport(import_);
		setPublic(public_);
		setThrows(throws_);
		setCase(case_);
		setEnum(enum_);
		setInstanceof(instanceof_);

	}
	public Intro(String return_, AstNodeInterface transient_, AstNodeInterface catch_, String extends_, String int_, String short_, String try_, String char_)
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, transient_, catch_, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);
		setReturn(return_);
		setTransient(transient_);
		setCatch(catch_);
		setExtends(extends_);
		setInt(int_);
		setShort(short_);
		setTry(try_);
		setChar(char_);

	}
	public Intro(String final_, String interface_, String static_, String void_, String class_, AstNodeInterface finally_, AstNodeInterface long_)
	{
		super(finally_, long_, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null, (AstNodeInterface) null);
		setFinal(final_);
		setInterface(interface_);
		setStatic(static_);
		setVoid(void_);
		setClass(class_);

	}
	public Intro(AstNodeInterface strictfp_, AstNodeInterface volatile_, AstNodeInterface const_, String float_, String native_, AstNodeInterface super_, AstNodeInterface while_)
	{
		super((AstNodeInterface) null, (AstNodeInterface) null, strictfp_, (AstNodeInterface) null, (AstNodeInterface) null, volatile_, const_, super_, while_);
		setFloat(float_);
		setNative(native_);

	}




	// =========================================================================
	// Properties

	private String abstract_;

	public final String getAbstract()
	{
		return this.abstract_;
	}
	
	public final String setAbstract(String abstract_)
	{
		String old = this.abstract_;
		this.abstract_ = abstract_;
		return old;
	}
	private String continue_;

	public final String getContinue()
	{
		return this.continue_;
	}
	
	public final String setContinue(String continue_)
	{
		String old = this.continue_;
		this.continue_ = continue_;
		return old;
	}
	private String for_;

	public final String getFor()
	{
		return this.for_;
	}
	
	public final String setFor(String for_)
	{
		String old = this.for_;
		this.for_ = for_;
		return old;
	}
	private String new_;

	public final String getNew()
	{
		return this.new_;
	}
	
	public final String setNew(String new_)
	{
		String old = this.new_;
		this.new_ = new_;
		return old;
	}
	private String switch_;

	public final String getSwitch()
	{
		return this.switch_;
	}
	
	public final String setSwitch(String switch_)
	{
		String old = this.switch_;
		this.switch_ = switch_;
		return old;
	}
	private String assert_;

	public final String getAssert()
	{
		return this.assert_;
	}
	
	public final String setAssert(String assert_)
	{
		String old = this.assert_;
		this.assert_ = assert_;
		return old;
	}
	private String default_;

	public final String getDefault()
	{
		return this.default_;
	}
	
	public final String setDefault(String default_)
	{
		String old = this.default_;
		this.default_ = default_;
		return old;
	}
	private String goto_;

	public final String getGoto()
	{
		return this.goto_;
	}
	
	public final String setGoto(String goto_)
	{
		String old = this.goto_;
		this.goto_ = goto_;
		return old;
	}
	private String package_;

	public final String getPackage()
	{
		return this.package_;
	}
	
	public final String setPackage(String package_)
	{
		String old = this.package_;
		this.package_ = package_;
		return old;
	}
	private String synchronized_;

	public final String getSynchronized()
	{
		return this.synchronized_;
	}
	
	public final String setSynchronized(String synchronized_)
	{
		String old = this.synchronized_;
		this.synchronized_ = synchronized_;
		return old;
	}
	private String boolean_;

	public final String getBoolean()
	{
		return this.boolean_;
	}
	
	public final String setBoolean(String boolean_)
	{
		String old = this.boolean_;
		this.boolean_ = boolean_;
		return old;
	}
	private String do_;

	public final String getDo()
	{
		return this.do_;
	}
	
	public final String setDo(String do_)
	{
		String old = this.do_;
		this.do_ = do_;
		return old;
	}
	private String if_;

	public final String getIf()
	{
		return this.if_;
	}
	
	public final String setIf(String if_)
	{
		String old = this.if_;
		this.if_ = if_;
		return old;
	}
	private String private_;

	public final String getPrivate()
	{
		return this.private_;
	}
	
	public final String setPrivate(String private_)
	{
		String old = this.private_;
		this.private_ = private_;
		return old;
	}
	private String this_;

	public final String getThis()
	{
		return this.this_;
	}
	
	public final String setThis(String this_)
	{
		String old = this.this_;
		this.this_ = this_;
		return old;
	}
	private String break_;

	public final String getBreak()
	{
		return this.break_;
	}
	
	public final String setBreak(String break_)
	{
		String old = this.break_;
		this.break_ = break_;
		return old;
	}
	private String double_;

	public final String getDouble()
	{
		return this.double_;
	}
	
	public final String setDouble(String double_)
	{
		String old = this.double_;
		this.double_ = double_;
		return old;
	}
	private String implements_;

	public final String getImplements()
	{
		return this.implements_;
	}
	
	public final String setImplements(String implements_)
	{
		String old = this.implements_;
		this.implements_ = implements_;
		return old;
	}
	private String protected_;

	public final String getProtected()
	{
		return this.protected_;
	}
	
	public final String setProtected(String protected_)
	{
		String old = this.protected_;
		this.protected_ = protected_;
		return old;
	}
	private String throw_;

	public final String getThrow()
	{
		return this.throw_;
	}
	
	public final String setThrow(String throw_)
	{
		String old = this.throw_;
		this.throw_ = throw_;
		return old;
	}
	private String byte_;

	public final String getByte()
	{
		return this.byte_;
	}
	
	public final String setByte(String byte_)
	{
		String old = this.byte_;
		this.byte_ = byte_;
		return old;
	}
	private String else_;

	public final String getElse()
	{
		return this.else_;
	}
	
	public final String setElse(String else_)
	{
		String old = this.else_;
		this.else_ = else_;
		return old;
	}
	private String import_;

	public final String getImport()
	{
		return this.import_;
	}
	
	public final String setImport(String import_)
	{
		String old = this.import_;
		this.import_ = import_;
		return old;
	}
	private String public_;

	public final String getPublic()
	{
		return this.public_;
	}
	
	public final String setPublic(String public_)
	{
		String old = this.public_;
		this.public_ = public_;
		return old;
	}
	private String throws_;

	public final String getThrows()
	{
		return this.throws_;
	}
	
	public final String setThrows(String throws_)
	{
		String old = this.throws_;
		this.throws_ = throws_;
		return old;
	}
	private String case_;

	public final String getCase()
	{
		return this.case_;
	}
	
	public final String setCase(String case_)
	{
		String old = this.case_;
		this.case_ = case_;
		return old;
	}
	private String enum_;

	public final String getEnum()
	{
		return this.enum_;
	}
	
	public final String setEnum(String enum_)
	{
		String old = this.enum_;
		this.enum_ = enum_;
		return old;
	}
	private String instanceof_;

	public final String getInstanceof()
	{
		return this.instanceof_;
	}
	
	public final String setInstanceof(String instanceof_)
	{
		String old = this.instanceof_;
		this.instanceof_ = instanceof_;
		return old;
	}
	private String return_;

	public final String getReturn()
	{
		return this.return_;
	}
	
	public final String setReturn(String return_)
	{
		String old = this.return_;
		this.return_ = return_;
		return old;
	}
	private String transient_;

	public final String getTransient()
	{
		return this.transient_;
	}
	
	public final String setTransient(String transient_)
	{
		String old = this.transient_;
		this.transient_ = transient_;
		return old;
	}
	private String catch_;

	public final String getCatch()
	{
		return this.catch_;
	}
	
	public final String setCatch(String catch_)
	{
		String old = this.catch_;
		this.catch_ = catch_;
		return old;
	}
	private String extends_;

	public final String getExtends()
	{
		return this.extends_;
	}
	
	public final String setExtends(String extends_)
	{
		String old = this.extends_;
		this.extends_ = extends_;
		return old;
	}
	private String int_;

	public final String getInt()
	{
		return this.int_;
	}
	
	public final String setInt(String int_)
	{
		String old = this.int_;
		this.int_ = int_;
		return old;
	}
	private String short_;

	public final String getShort()
	{
		return this.short_;
	}
	
	public final String setShort(String short_)
	{
		String old = this.short_;
		this.short_ = short_;
		return old;
	}
	private String try_;

	public final String getTry()
	{
		return this.try_;
	}
	
	public final String setTry(String try_)
	{
		String old = this.try_;
		this.try_ = try_;
		return old;
	}
	private String char_;

	public final String getChar()
	{
		return this.char_;
	}
	
	public final String setChar(String char_)
	{
		String old = this.char_;
		this.char_ = char_;
		return old;
	}
	private String final_;

	public final String getFinal()
	{
		return this.final_;
	}
	
	public final String setFinal(String final_)
	{
		String old = this.final_;
		this.final_ = final_;
		return old;
	}
	private String interface_;

	public final String getInterface()
	{
		return this.interface_;
	}
	
	public final String setInterface(String interface_)
	{
		String old = this.interface_;
		this.interface_ = interface_;
		return old;
	}
	private String static_;

	public final String getStatic()
	{
		return this.static_;
	}
	
	public final String setStatic(String static_)
	{
		String old = this.static_;
		this.static_ = static_;
		return old;
	}
	private String void_;

	public final String getVoid()
	{
		return this.void_;
	}
	
	public final String setVoid(String void_)
	{
		String old = this.void_;
		this.void_ = void_;
		return old;
	}
	private String class_;

	public final String getClass()
	{
		return this.class_;
	}
	
	public final String setClass(String class_)
	{
		String old = this.class_;
		this.class_ = class_;
		return old;
	}
	private String float_;

	public final String getFloat()
	{
		return this.float_;
	}
	
	public final String setFloat(String float_)
	{
		String old = this.float_;
		this.float_ = float_;
		return old;
	}
	private String native_;

	public final String getNative()
	{
		return this.native_;
	}
	
	public final String setNative(String native_)
	{
		String old = this.native_;
		this.native_ = native_;
		return old;
	}

	@Override
	public final int getPropertyCount()
	{
		return 43;
	}
	
	@Override
	public final AstNodePropertyIterator propertyIterator()
	{
		return new AstNodePropertyIterator()
		{
			@Override
			protected int getPropertyCount()
			{
				return 43;
			}
			
			@Override
			protected String getName(int index)
			{
				switch (index)
				{
					case 0:
						return "abstract";
					case 1:
						return "continue";
					case 2:
						return "for";
					case 3:
						return "new";
					case 4:
						return "switch";
					case 5:
						return "assert";
					case 6:
						return "default";
					case 7:
						return "goto";
					case 8:
						return "package";
					case 9:
						return "synchronized";
					case 10:
						return "boolean";
					case 11:
						return "do";
					case 12:
						return "if";
					case 13:
						return "private";
					case 14:
						return "this";
					case 15:
						return "break";
					case 16:
						return "double";
					case 17:
						return "implements";
					case 18:
						return "protected";
					case 19:
						return "throw";
					case 20:
						return "byte";
					case 21:
						return "else";
					case 22:
						return "import";
					case 23:
						return "public";
					case 24:
						return "throws";
					case 25:
						return "case";
					case 26:
						return "enum";
					case 27:
						return "instanceof";
					case 28:
						return "return";
					case 29:
						return "transient";
					case 30:
						return "catch";
					case 31:
						return "extends";
					case 32:
						return "int";
					case 33:
						return "short";
					case 34:
						return "try";
					case 35:
						return "char";
					case 36:
						return "final";
					case 37:
						return "interface";
					case 38:
						return "static";
					case 39:
						return "void";
					case 40:
						return "class";
					case 41:
						return "float";
					case 42:
						return "native";

					default:
						throw new IndexOutOfBoundsException();
				}
			}
			
			@Override
			protected Object getValue(int index)
			{
				switch (index)
				{
					case 0:
						return Intro.this.getAbstract();
					case 1:
						return Intro.this.getContinue();
					case 2:
						return Intro.this.getFor();
					case 3:
						return Intro.this.getNew();
					case 4:
						return Intro.this.getSwitch();
					case 5:
						return Intro.this.getAssert();
					case 6:
						return Intro.this.getDefault();
					case 7:
						return Intro.this.getGoto();
					case 8:
						return Intro.this.getPackage();
					case 9:
						return Intro.this.getSynchronized();
					case 10:
						return Intro.this.getBoolean();
					case 11:
						return Intro.this.getDo();
					case 12:
						return Intro.this.getIf();
					case 13:
						return Intro.this.getPrivate();
					case 14:
						return Intro.this.getThis();
					case 15:
						return Intro.this.getBreak();
					case 16:
						return Intro.this.getDouble();
					case 17:
						return Intro.this.getImplements();
					case 18:
						return Intro.this.getProtected();
					case 19:
						return Intro.this.getThrow();
					case 20:
						return Intro.this.getByte();
					case 21:
						return Intro.this.getElse();
					case 22:
						return Intro.this.getImport();
					case 23:
						return Intro.this.getPublic();
					case 24:
						return Intro.this.getThrows();
					case 25:
						return Intro.this.getCase();
					case 26:
						return Intro.this.getEnum();
					case 27:
						return Intro.this.getInstanceof();
					case 28:
						return Intro.this.getReturn();
					case 29:
						return Intro.this.getTransient();
					case 30:
						return Intro.this.getCatch();
					case 31:
						return Intro.this.getExtends();
					case 32:
						return Intro.this.getInt();
					case 33:
						return Intro.this.getShort();
					case 34:
						return Intro.this.getTry();
					case 35:
						return Intro.this.getChar();
					case 36:
						return Intro.this.getFinal();
					case 37:
						return Intro.this.getInterface();
					case 38:
						return Intro.this.getStatic();
					case 39:
						return Intro.this.getVoid();
					case 40:
						return Intro.this.getClass();
					case 41:
						return Intro.this.getFloat();
					case 42:
						return Intro.this.getNative();

					default:
						throw new IndexOutOfBoundsException();
				}
			}
			
			@Override
			protected Object setValue(int index, Object value)
			{
				switch (index)
				{
					case 0:
						return Intro.this.setAbstract((String) value);
					case 1:
						return Intro.this.setContinue((String) value);
					case 2:
						return Intro.this.setFor((String) value);
					case 3:
						return Intro.this.setNew((String) value);
					case 4:
						return Intro.this.setSwitch((String) value);
					case 5:
						return Intro.this.setAssert((String) value);
					case 6:
						return Intro.this.setDefault((String) value);
					case 7:
						return Intro.this.setGoto((String) value);
					case 8:
						return Intro.this.setPackage((String) value);
					case 9:
						return Intro.this.setSynchronized((String) value);
					case 10:
						return Intro.this.setBoolean((String) value);
					case 11:
						return Intro.this.setDo((String) value);
					case 12:
						return Intro.this.setIf((String) value);
					case 13:
						return Intro.this.setPrivate((String) value);
					case 14:
						return Intro.this.setThis((String) value);
					case 15:
						return Intro.this.setBreak((String) value);
					case 16:
						return Intro.this.setDouble((String) value);
					case 17:
						return Intro.this.setImplements((String) value);
					case 18:
						return Intro.this.setProtected((String) value);
					case 19:
						return Intro.this.setThrow((String) value);
					case 20:
						return Intro.this.setByte((String) value);
					case 21:
						return Intro.this.setElse((String) value);
					case 22:
						return Intro.this.setImport((String) value);
					case 23:
						return Intro.this.setPublic((String) value);
					case 24:
						return Intro.this.setThrows((String) value);
					case 25:
						return Intro.this.setCase((String) value);
					case 26:
						return Intro.this.setEnum((String) value);
					case 27:
						return Intro.this.setInstanceof((String) value);
					case 28:
						return Intro.this.setReturn((String) value);
					case 29:
						return Intro.this.setTransient((String) value);
					case 30:
						return Intro.this.setCatch((String) value);
					case 31:
						return Intro.this.setExtends((String) value);
					case 32:
						return Intro.this.setInt((String) value);
					case 33:
						return Intro.this.setShort((String) value);
					case 34:
						return Intro.this.setTry((String) value);
					case 35:
						return Intro.this.setChar((String) value);
					case 36:
						return Intro.this.setFinal((String) value);
					case 37:
						return Intro.this.setInterface((String) value);
					case 38:
						return Intro.this.setStatic((String) value);
					case 39:
						return Intro.this.setVoid((String) value);
					case 40:
						return Intro.this.setClass((String) value);
					case 41:
						return Intro.this.setFloat((String) value);
					case 42:
						return Intro.this.setNative((String) value);

					default:
						throw new IndexOutOfBoundsException();
				}
			}
		};
	}


	// =========================================================================
	// Children

	public final void setFinally(AstNodeInterface finally_)
	{
		set(0, finally_);
	}
	
	public final AstNodeInterface getFinally()
	{
		return (AstNodeInterface) get(0);
	}
	public final void setLong(AstNodeInterface long_)
	{
		set(1, long_);
	}
	
	public final AstNodeInterface getLong()
	{
		return (AstNodeInterface) get(1);
	}
	public final void setStrictfp(AstNodeInterface strictfp_)
	{
		set(2, strictfp_);
	}
	
	public final AstNodeInterface getStrictfp()
	{
		return (AstNodeInterface) get(2);
	}
	public final void setTransient(AstNodeInterface transient_)
	{
		set(3, transient_);
	}
	
	public final AstNodeInterface getTransient()
	{
		return (AstNodeInterface) get(3);
	}
	public final void setCatch(AstNodeInterface catch_)
	{
		set(4, catch_);
	}
	
	public final AstNodeInterface getCatch()
	{
		return (AstNodeInterface) get(4);
	}
	public final void setVolatile(AstNodeInterface volatile_)
	{
		set(5, volatile_);
	}
	
	public final AstNodeInterface getVolatile()
	{
		return (AstNodeInterface) get(5);
	}
	public final void setConst(AstNodeInterface const_)
	{
		set(6, const_);
	}
	
	public final AstNodeInterface getConst()
	{
		return (AstNodeInterface) get(6);
	}
	public final void setSuper(AstNodeInterface super_)
	{
		set(7, super_);
	}
	
	public final AstNodeInterface getSuper()
	{
		return (AstNodeInterface) get(7);
	}
	public final void setWhile(AstNodeInterface while_)
	{
		set(8, while_);
	}
	
	public final AstNodeInterface getWhile()
	{
		return (AstNodeInterface) get(8);
	}

	private static final String[] CHILD_NAMES = new String[] {"finally", "long", "strictfp", "transient", "catch", "volatile", "const", "super", "while"};

	public final String[] getChildNames()
	{
		return CHILD_NAMES;
	}


	// =========================================================================


}
